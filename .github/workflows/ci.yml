name: "CI"

env:
  REGISTRY: ghcr.io
  MAIN_BRANCH: main
  TARGET_LAYER: prod
  TEST_TARGET_LAYER: development
  DOCKER_COMPOSE_PATH: docker-compose.yml

on:
  push:
    branches:
      - "main"

jobs:
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-latest
    outputs:
      image_id: ${{ steps.image_id.outputs.image_id }}
      test_image_id: ${{ steps.image_id.outputs.test_image_id }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - id: image_id
        name: Generate Image ID
        run: |
          echo "::set-output name=image_id::${{ env.REGISTRY }}/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]'):${{ github.sha }}"
          echo "::set-output name=test_image_id::${{ env.REGISTRY }}/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]'):${{ github.sha }}-test"

      - name: Get Ref Name
        run: echo "REF=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.repository_owner }} --password-stdin ${{ env.REGISTRY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: ${{ env.TARGET_LAYER }}
          push: true
          tags: ${{ steps.image_id.outputs.image_id }}
          build-args: |
            ENVIRONMENT=${ENVIRONMENT}
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Build Test Image
        uses: docker/build-push-action@v2
        with:
          context: .
          target: ${{ env.TEST_TARGET_LAYER }}
          push: true
          tags: ${{ steps.image_id.outputs.test_image_id }}
          build-args: |
            ENVIRONMENT=${ENVIRONMENT}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new # mode=max: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  run-tests:
    name: Run Tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      IMAGE_ID: ${{ needs.build_and_push.outputs.test_image_id }}
    outputs:
      image_id: ${{ needs.build_and_push.outputs.image_id }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Get Ref Name
        run: echo "REF=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Build Compose File
        run: >
          CONTAINER_IMAGE=${IMAGE_ID}
          docker-compose
          -f docker-compose.yml
          config > compose.yml

      - name: Pull Images
        run: docker-compose -f compose.yml pull

      - name: Run Tests
        run: >
          docker-compose -f compose.yml
          run --rm backend pytest -vvv --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: pytest
          name: todo-codecov
          verbose: true
